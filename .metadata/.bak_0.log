!SESSION 2023-11-16 08:18:19.548 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file E:\bruno tads0\.metadata\.bak_0.log
Created Time: 2023-11-16 08:18:30.702

!ENTRY ch.qos.logback.classic 1 0 2023-11-16 08:18:30.711
!MESSAGE Logback config file: E:\bruno tads0\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-11-16 08:18:34.034
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-16 08:18:34.034
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-16 08:18:34.034
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-16 08:18:38.924
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\bruno.hgsilva3'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-16 12:43:27.904 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-11-16 12:43:28.878
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.eclipse.core.resources 4 567 2023-11-16 12:43:30.262
!MESSAGE Workspace restored, but some problems occurred.
!SUBENTRY 1 org.eclipse.core.resources 4 567 2023-11-16 12:43:30.262
!MESSAGE Could not read metadata for '.org.eclipse.egit.core.cmp'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException(/.org.eclipse.egit.core.cmp)[567]: java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:895)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:875)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:731)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1585)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2547)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2252)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:571)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:1)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:943)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:1)
	at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256)
	at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:321)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:264)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:545)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:818)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:810)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:767)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:513)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:397)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:496)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SUBENTRY 2 org.eclipse.core.resources 4 567 2023-11-16 12:43:30.262
!MESSAGE The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
!STACK 0
java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:895)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:875)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:731)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1585)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2547)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2252)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:571)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:1)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:943)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:1)
	at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256)
	at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:321)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:264)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:545)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:818)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:810)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:767)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:513)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:397)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:496)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY ch.qos.logback.classic 1 0 2023-11-16 12:43:30.731
!MESSAGE Logback config file: D:\bruno tads0\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-11-16 12:43:32.746
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-16 12:43:32.746
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-16 12:43:32.746
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-16 12:43:36.774
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\bruno.hgsilva3'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:03:24.633
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:04:49.203
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more
!SESSION 2023-11-16 13:05:06.407 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-11-16 13:05:07.425
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-11-16 13:05:08.611
!MESSAGE Logback config file: D:\bruno tads0\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-11-16 13:05:10.630
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-16 13:05:10.630
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-16 13:05:10.630
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-16 13:05:13.877
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\bruno.hgsilva3'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:05:25.586
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:05:49.314
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:05:53.219
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:05:56.964
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:06:00.300
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:06:03.689
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:06:06.899
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:06:10.231
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:06:13.366
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:06:16.236
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:06:19.363
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:06:22.732
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:06:25.692
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:06:28.547
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:06:31.315
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:06:34.269
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:06:37.082
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:06:40.722
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.ui 4 0 2023-11-16 13:06:44.387
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more
!SESSION 2023-11-16 14:51:40.297 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-11-16 14:51:41.199
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-11-16 14:51:42.217
!MESSAGE Logback config file: D:\bruno tads0\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-11-16 14:51:44.083
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-16 14:51:44.098
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-16 14:51:44.098
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-16 14:51:46.966
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\bruno.hgsilva3'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-17 11:26:43.766 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-11-17 11:26:44.888
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.eclipse.core.resources 4 567 2023-11-17 11:26:54.878
!MESSAGE Workspace restored, but some problems occurred.
!SUBENTRY 1 org.eclipse.core.resources 4 567 2023-11-17 11:26:54.878
!MESSAGE Could not read metadata for '.org.eclipse.egit.core.cmp'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException(/.org.eclipse.egit.core.cmp)[567]: java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:895)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:875)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:731)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1585)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2547)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2252)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:571)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:1)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:943)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:1)
	at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256)
	at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:321)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:264)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:545)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:818)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:810)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:767)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:513)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:397)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:496)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SUBENTRY 2 org.eclipse.core.resources 4 567 2023-11-17 11:26:54.878
!MESSAGE The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
!STACK 0
java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:895)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:875)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:731)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1585)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2547)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2252)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:571)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:1)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:943)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:1)
	at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256)
	at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:321)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:264)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:545)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:818)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:810)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:767)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:513)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:397)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:496)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY ch.qos.logback.classic 1 0 2023-11-17 11:26:56.117
!MESSAGE Logback config file: F:\bruno tads0\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-11-17 11:26:58.725
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-17 11:26:58.725
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-17 11:26:58.725
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-17 11:27:02.634
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\bruno.hgsilva3'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-17 14:35:55.387 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-11-17 14:35:56.436
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.eclipse.core.resources 4 567 2023-11-17 14:36:08.140
!MESSAGE Workspace restored, but some problems occurred.
!SUBENTRY 1 org.eclipse.core.resources 4 567 2023-11-17 14:36:08.140
!MESSAGE Could not read metadata for '.org.eclipse.egit.core.cmp'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException(/.org.eclipse.egit.core.cmp)[567]: java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:895)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:875)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:731)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1585)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2547)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2252)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:571)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:1)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:943)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:1)
	at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256)
	at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:321)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:264)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:545)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:818)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:810)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:767)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:513)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:397)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:496)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SUBENTRY 2 org.eclipse.core.resources 4 567 2023-11-17 14:36:08.140
!MESSAGE The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
!STACK 0
java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:895)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:875)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:731)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1585)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2547)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2252)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:571)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:1)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:943)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:1)
	at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256)
	at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:321)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:264)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:545)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:818)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:810)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:767)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:513)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:397)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:496)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY ch.qos.logback.classic 1 0 2023-11-17 14:36:08.741
!MESSAGE Logback config file: D:\bruno tads0\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-11-17 14:36:10.963
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-17 14:36:10.963
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-17 14:36:10.963
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-17 14:36:14.588
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\bruno.hgsilva3'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-21 11:54:18.390 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-11-21 11:54:19.556
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.eclipse.core.resources 4 567 2023-11-21 11:54:26.941
!MESSAGE Workspace restored, but some problems occurred.
!SUBENTRY 1 org.eclipse.core.resources 4 567 2023-11-21 11:54:26.941
!MESSAGE Could not read metadata for '.org.eclipse.egit.core.cmp'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException(/.org.eclipse.egit.core.cmp)[567]: java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:895)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:875)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:731)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1585)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2547)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2252)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:571)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:1)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:943)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:1)
	at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256)
	at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:321)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:264)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:545)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:818)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:810)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:767)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:513)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:397)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:496)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SUBENTRY 2 org.eclipse.core.resources 4 567 2023-11-21 11:54:26.941
!MESSAGE The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
!STACK 0
java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:895)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:875)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:731)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1585)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2547)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2252)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:571)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:1)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:943)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:1)
	at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256)
	at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:321)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:264)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:545)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:818)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:810)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:767)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:513)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:397)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:496)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY ch.qos.logback.classic 1 0 2023-11-21 11:54:27.636
!MESSAGE Logback config file: F:\bruno tads0\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-11-21 11:54:30.535
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-21 11:54:30.535
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-21 11:54:30.535
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-21 11:54:34.227
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\bruno.hgsilva3'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-21 12:15:48.289 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-11-21 12:15:49.280
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.eclipse.core.resources 2 10035 2023-11-21 12:15:52.702
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY ch.qos.logback.classic 1 0 2023-11-21 12:15:53.212
!MESSAGE Logback config file: F:\bruno tads0\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-11-21 12:15:55.334
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-21 12:15:55.334
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-21 12:15:55.334
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-21 12:15:58.827
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\bruno.hgsilva3'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-22 13:55:49.571 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-11-22 13:55:53.614
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.eclipse.core.resources 4 567 2023-11-22 13:55:56.581
!MESSAGE Workspace restored, but some problems occurred.
!SUBENTRY 1 org.eclipse.core.resources 4 567 2023-11-22 13:55:56.581
!MESSAGE Could not read metadata for '.org.eclipse.egit.core.cmp'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException(/.org.eclipse.egit.core.cmp)[567]: java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:895)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:875)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:731)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1585)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2547)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2252)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:571)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:1)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:943)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:1)
	at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256)
	at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:321)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:264)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:545)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:818)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:810)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:767)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:513)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:397)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:496)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SUBENTRY 2 org.eclipse.core.resources 4 567 2023-11-22 13:55:56.603
!MESSAGE The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
!STACK 0
java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:895)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:875)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:731)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1585)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2547)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2252)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:571)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:1)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:943)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:1)
	at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256)
	at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:321)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:264)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:545)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:818)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:810)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:767)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:513)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:397)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:496)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY ch.qos.logback.classic 1 0 2023-11-22 13:56:04.171
!MESSAGE Logback config file: D:\bruno tads0\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-11-22 13:56:15.305
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-22 13:56:15.305
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-22 13:56:15.305
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-22 13:56:50.954
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\bruno.hgsilva3'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.e4.ui.workbench 2 0 2023-11-22 13:56:51.037
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.spy.preferences.parts.PreferenceSpyPart" id and the "Preference Spy" label.It points to the non available "bundleclass://org.eclipse.pde.spy.preferences/org.eclipse.pde.spy.preferences.parts.PreferenceSpyPart" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2023-11-22 13:56:51.219
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.spy.bundle.BundleSpyPart" id and the "Bundle Spy" label.It points to the non available "bundleclass://org.eclipse.pde.spy.bundle/org.eclipse.pde.spy.bundle.BundleSpyPart" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2023-11-22 13:56:51.229
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.spy.context.ContextSpyPart" id and the "Context Spy" label.It points to the non available "bundleclass://org.eclipse.pde.spy.context/org.eclipse.pde.spy.context.ContextSpyPart" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2023-11-22 13:56:51.240
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.spy.css.CssSpyPart" id and the "CSS Spy" label.It points to the non available "bundleclass://org.eclipse.pde.spy.css/org.eclipse.pde.spy.css.CssSpyPart" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2023-11-22 13:56:51.250
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.spy.css.CSSScratchPadPart" id and the "CSS Scratch Pad" label.It points to the non available "bundleclass://org.eclipse.pde.spy.css/org.eclipse.pde.spy.css.CSSScratchPadPart" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2023-11-22 13:56:51.261
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.spy.event.internal.ui.EventSpyPart" id and the "Event Spy" label.It points to the non available "bundleclass://org.eclipse.pde.spy.event/org.eclipse.pde.spy.event.internal.ui.EventSpyPart" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2023-11-22 13:56:51.269
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.spy.model.ModelSpyPart" id and the "Model Spy" label.It points to the non available "bundleclass://org.eclipse.pde.spy.model/org.eclipse.pde.spy.model.ModelSpyPart" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2023-11-22 13:56:51.278
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.api.tools.ui.views.apitooling.views.apitoolingview" id and the "API Tools" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2023-11-22 13:56:51.286
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.runtime.RegistryBrowser" id and the "Plug-in Registry" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2023-11-22 13:56:51.296
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.ui.PluginsView" id and the "Plug-ins" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2023-11-22 13:56:51.303
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.ui.FeaturesView" id and the "Features" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2023-11-22 13:56:51.311
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.ui.DependenciesView" id and the "Plug-in Dependencies" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2023-11-22 13:56:51.321
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.ui.TargetPlatformState" id and the "Target Platform State" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2023-11-22 13:56:51.330
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.ui.ImageBrowserView" id and the "Plug-in Image Browser" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2023-11-22 13:56:51.339
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.wb.core.StructureView" id and the "Structure" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2023-11-22 13:56:51.347
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.wb.core.PaletteView" id and the "Palette" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled
!SESSION 2023-11-22 15:29:48.960 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-11-22 15:29:50.120
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-11-22 15:30:00.534
!MESSAGE Logback config file: D:\bruno tads0\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-11-22 15:30:17.617
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-22 15:30:17.617
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-22 15:30:17.617
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-22 15:30:31.537
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\bruno.hgsilva3'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-22 15:40:00.141 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-11-22 15:40:01.824
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.eclipse.core.resources 2 10035 2023-11-22 15:40:02.699
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY ch.qos.logback.classic 1 0 2023-11-22 15:40:03.678
!MESSAGE Logback config file: D:\bruno tads0\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-11-22 15:40:08.038
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-22 15:40:08.038
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-22 15:40:08.038
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-22 15:40:13.603
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\bruno.hgsilva3'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-23 09:19:02.331 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-11-23 09:19:04.901
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.eclipse.core.resources 4 567 2023-11-23 09:20:49.940
!MESSAGE Workspace restored, but some problems occurred.
!SUBENTRY 1 org.eclipse.core.resources 4 567 2023-11-23 09:20:49.940
!MESSAGE Could not read metadata for '.org.eclipse.egit.core.cmp'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException(/.org.eclipse.egit.core.cmp)[567]: java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:895)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:875)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:731)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1585)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2547)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2252)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:571)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:1)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:943)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:1)
	at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256)
	at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:321)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:264)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:545)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:818)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:810)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:767)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:513)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:397)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:496)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SUBENTRY 2 org.eclipse.core.resources 4 567 2023-11-23 09:20:49.942
!MESSAGE The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
!STACK 0
java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:895)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:875)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:731)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1585)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2547)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2252)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:571)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:1)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:943)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:1)
	at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256)
	at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:321)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:264)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:545)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:818)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:810)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:767)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:513)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:397)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:496)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY ch.qos.logback.classic 1 0 2023-11-23 09:20:51.290
!MESSAGE Logback config file: F:\bruno tads0\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-11-23 09:20:56.173
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-23 09:20:56.173
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-23 09:20:56.173
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-23 09:21:03.991
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\bruno.hgsilva3'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-23 12:42:11.396 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-11-23 12:42:12.542
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-11-23 12:42:31.180
!MESSAGE Logback config file: F:\bruno tads0\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-11-23 12:42:33.788
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-23 12:42:33.788
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-23 12:42:33.788
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-23 12:42:37.977
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\bruno.hgsilva3'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui 4 0 2023-11-23 13:17:29.643
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado))
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesUtils.loadImage(ExternalExecutablesUtils.java:38)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 62 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (O sistema não pode encontrar o caminho especificado)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 76 more

!ENTRY org.eclipse.jdt.core 4 4 2023-11-23 15:31:26.531
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		 
          
		// qtd jogadores
		int qtdJogadores = bemvindo();
		
		// nomes
		String[] nomes = pedirnomes(qtdJogadores);
		
		// regras
		regras();

		
        // Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);
		

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		} 
		
		// com 2 jogadores 
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;

			if (carro == 1) {

				// se o primeiro jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}
					if()

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);
				
				

			}

			
			
			
			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);

			}

		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}

		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		default -> situacao = "LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.";
		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1: situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			    break;
		case 2: situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			    break;
		case 3: situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			    break;
		case 4: situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			    break;
		case 5: situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
	            break;
		case 6: situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			    break;
		case 7: situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			    break;
		case 8: situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			    break;
		case 9: situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			    break;
		case 10:situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			    break;
		 }
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1: valor = -1000;
			    break;
		case 2: valor = 2000;
		        break;
		case 3: valor = -400;
			    break;
		case 4: valor = 1000;
			    break;
		case 5: valor = -300;
			    break;
		case 6: valor = 2500;
			    break;
		case 7: valor = -500;
			    break;
		case 8: valor = 1000;
			    break;
		case 9: valor = -600;
			    break;
		case 10: valor = 500;
			     break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		default -> valor = 5000;
		}
		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(int valor1 ,String nome1){
		
		String[] nomes = new String[3];
		int [] valor =new int[3];
		
		for(int i = 0; i < nomes.length;i++){
			for(int j = 0;j < valor.length; j++){
				
				(valor[i] > valor)
			}
			
		}
		
	
		
		
		
		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-23 15:31:26.661
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-23 15:31:26.666
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-23 15:31:26.962
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		 
          
		// qtd jogadores
		int qtdJogadores = bemvindo();
		
		// nomes
		String[] nomes = pedirnomes(qtdJogadores);
		
		// regras
		regras();

		
        // Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);
		

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		} 
		
		// com 2 jogadores 
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;

			if (carro == 1) {

				// se o primeiro jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}
					if()

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);
				
				

			}

			
			
			
			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);

			}

		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}

		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		default -> situacao = "LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.";
		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1: situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			    break;
		case 2: situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			    break;
		case 3: situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			    break;
		case 4: situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			    break;
		case 5: situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
	            break;
		case 6: situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			    break;
		case 7: situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			    break;
		case 8: situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			    break;
		case 9: situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			    break;
		case 10:situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			    break;
		 }
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1: valor = -1000;
			    break;
		case 2: valor = 2000;
		        break;
		case 3: valor = -400;
			    break;
		case 4: valor = 1000;
			    break;
		case 5: valor = -300;
			    break;
		case 6: valor = 2500;
			    break;
		case 7: valor = -500;
			    break;
		case 8: valor = 1000;
			    break;
		case 9: valor = -600;
			    break;
		case 10: valor = 500;
			     break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		default -> valor = 5000;
		}
		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(int valor1 ,String nome1){
		
		String[] nomes = new String[3];
		int [] valor =new int[3];
		
		for(int i = 0; i < nomes.length;i++){
			for(int j = 0;j < valor.length; j++){
				
				(valor[i] > valor)
			}
			
		}
		
	
		
		
		
		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-23 15:31:27.140
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-23 15:31:27.151
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-23 15:31:27.466
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		 
          
		// qtd jogadores
		int qtdJogadores = bemvindo();
		
		// nomes
		String[] nomes = pedirnomes(qtdJogadores);
		
		// regras
		regras();

		
        // Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);
		

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		} 
		
		// com 2 jogadores 
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;

			if (carro == 1) {

				// se o primeiro jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}
					if()

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);
				
				

			}

			
			
			
			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);

			}

		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}

		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		default -> situacao = "LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.";
		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1: situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			    break;
		case 2: situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			    break;
		case 3: situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			    break;
		case 4: situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			    break;
		case 5: situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
	            break;
		case 6: situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			    break;
		case 7: situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			    break;
		case 8: situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			    break;
		case 9: situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			    break;
		case 10:situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			    break;
		 }
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1: valor = -1000;
			    break;
		case 2: valor = 2000;
		        break;
		case 3: valor = -400;
			    break;
		case 4: valor = 1000;
			    break;
		case 5: valor = -300;
			    break;
		case 6: valor = 2500;
			    break;
		case 7: valor = -500;
			    break;
		case 8: valor = 1000;
			    break;
		case 9: valor = -600;
			    break;
		case 10: valor = 500;
			     break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		default -> valor = 5000;
		}
		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(int valor1 ,String nome1){
		
		String[] nomes = new String[3];
		int [] valor =new int[3];
		
		for(int i = 0; i < nomes.length;i++){
			for(int j = 0;j < valor.length; j++){
				
				(valor[i] > valor1)
			}
			
		}
		
	
		
		
		
		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-23 15:31:27.478
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-23 15:31:27.483
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-23 15:31:27.921
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		 
          
		// qtd jogadores
		int qtdJogadores = bemvindo();
		
		// nomes
		String[] nomes = pedirnomes(qtdJogadores);
		
		// regras
		regras();

		
        // Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);
		

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		} 
		
		// com 2 jogadores 
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;

			if (carro == 1) {

				// se o primeiro jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}
					if()

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);
				
				

			}

			
			
			
			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);

			}

		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}

		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		default -> situacao = "LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.";
		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1: situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			    break;
		case 2: situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			    break;
		case 3: situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			    break;
		case 4: situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			    break;
		case 5: situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
	            break;
		case 6: situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			    break;
		case 7: situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			    break;
		case 8: situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			    break;
		case 9: situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			    break;
		case 10:situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			    break;
		 }
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1: valor = -1000;
			    break;
		case 2: valor = 2000;
		        break;
		case 3: valor = -400;
			    break;
		case 4: valor = 1000;
			    break;
		case 5: valor = -300;
			    break;
		case 6: valor = 2500;
			    break;
		case 7: valor = -500;
			    break;
		case 8: valor = 1000;
			    break;
		case 9: valor = -600;
			    break;
		case 10: valor = 500;
			     break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		default -> valor = 5000;
		}
		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(int valor1 ,String nome1){
		
		String[] nomes = new String[3];
		int [] valor =new int[3];
		
		for(int i = 0; i < nomes.length;i++){
			for(int j = 0;j < valor.length; j++){
				
				(valor[i] > valor1)
			}
			
		}
		
	
		
		
		
		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-23 15:31:27.932
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-23 15:31:27.937
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-23 15:31:29.668
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		 
          
		// qtd jogadores
		int qtdJogadores = bemvindo();
		
		// nomes
		String[] nomes = pedirnomes(qtdJogadores);
		
		// regras
		regras();

		
        // Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);
		

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		} 
		
		// com 2 jogadores 
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;

			if (carro == 1) {

				// se o primeiro jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}
					if()

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);
				
				

			}

			
			
			
			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);

			}

		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}

		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		default -> situacao = "LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.";
		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1: situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			    break;
		case 2: situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			    break;
		case 3: situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			    break;
		case 4: situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			    break;
		case 5: situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
	            break;
		case 6: situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			    break;
		case 7: situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			    break;
		case 8: situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			    break;
		case 9: situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			    break;
		case 10:situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			    break;
		 }
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1: valor = -1000;
			    break;
		case 2: valor = 2000;
		        break;
		case 3: valor = -400;
			    break;
		case 4: valor = 1000;
			    break;
		case 5: valor = -300;
			    break;
		case 6: valor = 2500;
			    break;
		case 7: valor = -500;
			    break;
		case 8: valor = 1000;
			    break;
		case 9: valor = -600;
			    break;
		case 10: valor = 500;
			     break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		default -> valor = 5000;
		}
		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(int valor1 ,String nome1){
		
		String[] nomes = new String[3];
		int [] valor =new int[3];
		
		for(int i = 0; i < nomes.length;i++){
			for(int j = 0;j < valor.length; j++){
				
				(valor[i] > valor1)
			}
			
		}
		
	
		
		
		
		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-23 15:31:29.684
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-23 15:31:29.689
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-23 15:31:30.417
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		 
          
		// qtd jogadores
		int qtdJogadores = bemvindo();
		
		// nomes
		String[] nomes = pedirnomes(qtdJogadores);
		
		// regras
		regras();

		
        // Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);
		

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		} 
		
		// com 2 jogadores 
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;

			if (carro == 1) {

				// se o primeiro jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}
					if()

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);
				
				

			}

			
			
			
			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);

			}

		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}

		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		default -> situacao = "LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.";
		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1: situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			    break;
		case 2: situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			    break;
		case 3: situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			    break;
		case 4: situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			    break;
		case 5: situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
	            break;
		case 6: situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			    break;
		case 7: situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			    break;
		case 8: situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			    break;
		case 9: situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			    break;
		case 10:situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			    break;
		 }
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1: valor = -1000;
			    break;
		case 2: valor = 2000;
		        break;
		case 3: valor = -400;
			    break;
		case 4: valor = 1000;
			    break;
		case 5: valor = -300;
			    break;
		case 6: valor = 2500;
			    break;
		case 7: valor = -500;
			    break;
		case 8: valor = 1000;
			    break;
		case 9: valor = -600;
			    break;
		case 10: valor = 500;
			     break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		default -> valor = 5000;
		}
		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(int valor1 ,String nome1){
		
		String[] nomes = new String[3];
		int [] valor =new int[3];
		
		for(int i = 0; i < nomes.length;i++){
			for(int j = 0;j < valor.length; j++){
				
				(valor[i] > valor1){
			}
			
		}
		
	
		
		
		
		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-23 15:31:30.429
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-23 15:31:30.434
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-23 15:31:30.979
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		 
          
		// qtd jogadores
		int qtdJogadores = bemvindo();
		
		// nomes
		String[] nomes = pedirnomes(qtdJogadores);
		
		// regras
		regras();

		
        // Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);
		

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		} 
		
		// com 2 jogadores 
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;

			if (carro == 1) {

				// se o primeiro jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}
					if()

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);
				
				

			}

			
			
			
			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);

			}

		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}

		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		default -> situacao = "LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.";
		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1: situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			    break;
		case 2: situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			    break;
		case 3: situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			    break;
		case 4: situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			    break;
		case 5: situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
	            break;
		case 6: situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			    break;
		case 7: situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			    break;
		case 8: situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			    break;
		case 9: situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			    break;
		case 10:situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			    break;
		 }
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1: valor = -1000;
			    break;
		case 2: valor = 2000;
		        break;
		case 3: valor = -400;
			    break;
		case 4: valor = 1000;
			    break;
		case 5: valor = -300;
			    break;
		case 6: valor = 2500;
			    break;
		case 7: valor = -500;
			    break;
		case 8: valor = 1000;
			    break;
		case 9: valor = -600;
			    break;
		case 10: valor = 500;
			     break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		default -> valor = 5000;
		}
		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(int valor1 ,String nome1){
		
		String[] nomes = new String[3];
		int [] valor =new int[3];
		
		for(int i = 0; i < nomes.length;i++){
			for(int j = 0;j < valor.length; j++){
				
				(valor[i] > valor1){
					
				}
			}
			
		}
		
	
		
		
		
		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-23 15:31:30.992
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-23 15:31:30.996
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-23 15:31:31.008
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		 
          
		// qtd jogadores
		int qtdJogadores = bemvindo();
		
		// nomes
		String[] nomes = pedirnomes(qtdJogadores);
		
		// regras
		regras();

		
        // Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);
		

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		} 
		
		// com 2 jogadores 
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;

			if (carro == 1) {

				// se o primeiro jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}
					if()

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);
				
				

			}

			
			
			
			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);

			}

		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}

		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		default -> situacao = "LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.";
		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1: situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			    break;
		case 2: situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			    break;
		case 3: situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			    break;
		case 4: situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			    break;
		case 5: situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
	            break;
		case 6: situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			    break;
		case 7: situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			    break;
		case 8: situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			    break;
		case 9: situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			    break;
		case 10:situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			    break;
		 }
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1: valor = -1000;
			    break;
		case 2: valor = 2000;
		        break;
		case 3: valor = -400;
			    break;
		case 4: valor = 1000;
			    break;
		case 5: valor = -300;
			    break;
		case 6: valor = 2500;
			    break;
		case 7: valor = -500;
			    break;
		case 8: valor = 1000;
			    break;
		case 9: valor = -600;
			    break;
		case 10: valor = 500;
			     break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		default -> valor = 5000;
		}
		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(int valor1 ,String nome1){
		
		String[] nomes = new String[3];
		int [] valor =new int[3];
		
		for(int i = 0; i < nomes.length;i++){
			for(int j = 0;j < valor.length; j++){
				
				(valor[i] > valor1){
					
				}
			}
			
		}
		
	
		
		
		
		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-23 15:31:31.019
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-23 15:31:31.024
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-23 15:31:31.597
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		 
          
		// qtd jogadores
		int qtdJogadores = bemvindo();
		
		// nomes
		String[] nomes = pedirnomes(qtdJogadores);
		
		// regras
		regras();

		
        // Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);
		

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		} 
		
		// com 2 jogadores 
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;

			if (carro == 1) {

				// se o primeiro jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}
					if()

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);
				
				

			}

			
			
			
			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);

			}

		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}

		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		default -> situacao = "LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.";
		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1: situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			    break;
		case 2: situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			    break;
		case 3: situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			    break;
		case 4: situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			    break;
		case 5: situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
	            break;
		case 6: situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			    break;
		case 7: situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			    break;
		case 8: situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			    break;
		case 9: situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			    break;
		case 10:situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			    break;
		 }
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1: valor = -1000;
			    break;
		case 2: valor = 2000;
		        break;
		case 3: valor = -400;
			    break;
		case 4: valor = 1000;
			    break;
		case 5: valor = -300;
			    break;
		case 6: valor = 2500;
			    break;
		case 7: valor = -500;
			    break;
		case 8: valor = 1000;
			    break;
		case 9: valor = -600;
			    break;
		case 10: valor = 500;
			     break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		default -> valor = 5000;
		}
		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(int valor1 ,String nome1){
		
		String[] nomes = new String[3];
		int [] valor =new int[3];
		
		for(int i = 0; i < nomes.length;i++){
			for(int j = 0;j < valor.length; j++){
				
				(valor[i] > valor1){
					
				}
			}
			
		}
		
	
		
		
		
		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-23 15:31:31.610
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-23 15:31:31.621
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-23 15:31:33.554
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		 
          
		// qtd jogadores
		int qtdJogadores = bemvindo();
		
		// nomes
		String[] nomes = pedirnomes(qtdJogadores);
		
		// regras
		regras();

		
        // Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);
		

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		} 
		
		// com 2 jogadores 
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;

			if (carro == 1) {

				// se o primeiro jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}
					if()

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);
				
				

			}

			
			
			
			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						dado2 = dado();
						posicao2 += dado2;
						System.out.println("DADO:" + dado2);
						System.out.println(frases(posicao2, num));
						dinheiro2 += resultados(posicao2, num);
						System.out.println();
					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						dado1 = dado();
						posicao1 += dado1;
						System.out.println("DADO:" + dado1);
						System.out.println(frases(posicao1, num));
						dinheiro1 += resultados(posicao1, num);
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 22 && posicao2 < 22);

			}

		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}

		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		default -> situacao = "LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.";
		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1: situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			    break;
		case 2: situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			    break;
		case 3: situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			    break;
		case 4: situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			    break;
		case 5: situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
	            break;
		case 6: situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			    break;
		case 7: situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			    break;
		case 8: situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			    break;
		case 9: situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			    break;
		case 10:situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			    break;
		 }
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1: valor = -1000;
			    break;
		case 2: valor = 2000;
		        break;
		case 3: valor = -400;
			    break;
		case 4: valor = 1000;
			    break;
		case 5: valor = -300;
			    break;
		case 6: valor = 2500;
			    break;
		case 7: valor = -500;
			    break;
		case 8: valor = 1000;
			    break;
		case 9: valor = -600;
			    break;
		case 10: valor = 500;
			     break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		default -> valor = 5000;
		}
		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(int valor1 ,String nome1){
		
		String[] nomes = new String[3];
		int [] valor =new int[3];
		
		for(int i = 0; i < nomes.length;i++){
			for(int j = 0;j < valor.length; j++){
				
				(valor[i] > valor1){
					
				}
			}
			
		}
		
	
		
		
		
		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-23 15:31:33.573
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-23 15:31:33.578
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2023-11-24 09:51:51.401 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-11-24 09:51:58.076
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.eclipse.core.resources 4 567 2023-11-24 09:52:24.504
!MESSAGE Workspace restored, but some problems occurred.
!SUBENTRY 1 org.eclipse.core.resources 4 567 2023-11-24 09:52:24.504
!MESSAGE Could not read metadata for '.org.eclipse.egit.core.cmp'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException(/.org.eclipse.egit.core.cmp)[567]: java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:895)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:875)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:731)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1585)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2547)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2252)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:571)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:1)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:943)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:1)
	at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256)
	at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:321)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:264)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:545)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:818)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:810)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:767)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:513)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:397)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:496)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SUBENTRY 2 org.eclipse.core.resources 4 567 2023-11-24 09:52:24.505
!MESSAGE The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
!STACK 0
java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:895)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:875)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:731)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1585)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2547)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2252)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:571)
	at org.eclipse.core.resources.ResourcesPlugin$WorkspaceInitCustomizer.addingService(ResourcesPlugin.java:1)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:943)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:1)
	at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256)
	at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:321)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:264)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:545)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:818)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:810)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:767)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:513)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:397)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:496)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY ch.qos.logback.classic 1 0 2023-11-24 09:52:28.431
!MESSAGE Logback config file: D:\bruno tads0\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-11-24 09:52:46.721
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-24 09:52:46.721
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-24 09:52:46.721
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-24 09:53:12.766
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\bruno.hgsilva3'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2023-11-24 13:16:56.690
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		// qtd jogadores
		int qtdJogadores = bemvindo();

		// nomes
		String[] nomes = pedirnomes(qtdJogadores);

		// regras
		regras();

		// Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		}

		// com 2 jogadores
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;
			int jg1 = 0, jg2 = 0;

			if (carro == 1) {

				// se o 1° jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}

						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									System.out.println();
									dinheiro1 += 5000;
									jg1 += 2;

								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}

						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro1 += 5000;
									System.out.println();
									jg1 += 2;
								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");

						}

					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			ganhador2(dinheiro1, dinheiro2, nomes);
			System.out.println();
			if(dinheiro1 > dinheiro2) {
				ranking(dinheiro1,nomes[0]);
			}
			else(dinheiro2 > dinhe)
		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (i == 21 && poscarro1 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1);
			} else if (i == 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][21], nome[1], valor2);
			} else if (i == 21 && poscarro1 >= 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1, nome[1], valor2);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}
		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1:
			situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			break;
		case 2:
			situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			break;
		case 3:
			situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			break;
		case 4:
			situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			break;
		case 5:
			situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
			break;
		case 6:
			situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			break;
		case 7:
			situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			break;
		case 8:
			situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			break;
		case 9:
			situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			break;
		case 10:
			situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			break;
		}
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1:
			valor = -1000;
			break;
		case 2:
			valor = 2000;
			break;
		case 3:
			valor = -400;
			break;
		case 4:
			valor = 1000;
			break;
		case 5:
			valor = -300;
			break;
		case 6:
			valor = 2500;
			break;
		case 7:
			valor = -500;
			break;
		case 8:
			valor = 1000;
			break;
		case 9:
			valor = -600;
			break;
		case 10:
			valor = 500;
			break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		}

		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(double valor1, String nome1) {

		String[] nomes = new String[3];
		double[] valor = new double[3];
		nomes[0] = "pedro";
		nomes[1] = "bruno";
		nomes[2] = "kauan";
		valor[0] = 10000;
		valor[1] = 4000;
		valor[2] = 2000;

		if (valor1 > valor[0]) {
			valor[0] = valor1;
			nomes[0] = nome1;
		} else if (valor1 > valor[1]) {
			valor[1] = valor1;
			nomes[1] = nome1;
		} else if (valor1 > valor[2]) {
			valor[2] = valor1;
			nomes[2] = nome1;
		}

		System.out.println("===============================");
		System.out.println("          RANKING          ");
		int num = 1;

		for (int i = 0; i < nomes.length; i++) {
			System.out.println("-------------------------------");
			System.out.printf("%d° %10s : R$%7.2f %n", num, nomes[i], valor[i]);
			num++;
		}
		System.out.println("===============================");
	}

	public static void ganhador2(double dinheiro1, double dinheiro2, String[] nomes) {

		if (dinheiro1 == dinheiro2) {
			System.out.println("O ganhador foi os dois jogadores");
		} else if (dinheiro1 > dinheiro2) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[0]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro1);
			System.out.println("=====================================");
		} else if (dinheiro2 > dinheiro1) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[1]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro2);
			System.out.println("=====================================");
		}

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-24 13:16:56.768
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-24 13:16:56.775
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-24 13:16:59.812
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		// qtd jogadores
		int qtdJogadores = bemvindo();

		// nomes
		String[] nomes = pedirnomes(qtdJogadores);

		// regras
		regras();

		// Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		}

		// com 2 jogadores
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;
			int jg1 = 0, jg2 = 0;

			if (carro == 1) {

				// se o 1° jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}

						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									System.out.println();
									dinheiro1 += 5000;
									jg1 += 2;

								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}

						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro1 += 5000;
									System.out.println();
									jg1 += 2;
								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");

						}

					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			ganhador2(dinheiro1, dinheiro2, nomes);
			System.out.println();
			if(dinheiro1 > dinheiro2) {
				ranking(dinheiro1,nomes[0]);
			}
			else(dinheiro2 > dinheiro1)
		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (i == 21 && poscarro1 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1);
			} else if (i == 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][21], nome[1], valor2);
			} else if (i == 21 && poscarro1 >= 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1, nome[1], valor2);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}
		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1:
			situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			break;
		case 2:
			situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			break;
		case 3:
			situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			break;
		case 4:
			situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			break;
		case 5:
			situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
			break;
		case 6:
			situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			break;
		case 7:
			situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			break;
		case 8:
			situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			break;
		case 9:
			situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			break;
		case 10:
			situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			break;
		}
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1:
			valor = -1000;
			break;
		case 2:
			valor = 2000;
			break;
		case 3:
			valor = -400;
			break;
		case 4:
			valor = 1000;
			break;
		case 5:
			valor = -300;
			break;
		case 6:
			valor = 2500;
			break;
		case 7:
			valor = -500;
			break;
		case 8:
			valor = 1000;
			break;
		case 9:
			valor = -600;
			break;
		case 10:
			valor = 500;
			break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		}

		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(double valor1, String nome1) {

		String[] nomes = new String[3];
		double[] valor = new double[3];
		nomes[0] = "pedro";
		nomes[1] = "bruno";
		nomes[2] = "kauan";
		valor[0] = 10000;
		valor[1] = 4000;
		valor[2] = 2000;

		if (valor1 > valor[0]) {
			valor[0] = valor1;
			nomes[0] = nome1;
		} else if (valor1 > valor[1]) {
			valor[1] = valor1;
			nomes[1] = nome1;
		} else if (valor1 > valor[2]) {
			valor[2] = valor1;
			nomes[2] = nome1;
		}

		System.out.println("===============================");
		System.out.println("          RANKING          ");
		int num = 1;

		for (int i = 0; i < nomes.length; i++) {
			System.out.println("-------------------------------");
			System.out.printf("%d° %10s : R$%7.2f %n", num, nomes[i], valor[i]);
			num++;
		}
		System.out.println("===============================");
	}

	public static void ganhador2(double dinheiro1, double dinheiro2, String[] nomes) {

		if (dinheiro1 == dinheiro2) {
			System.out.println("O ganhador foi os dois jogadores");
		} else if (dinheiro1 > dinheiro2) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[0]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro1);
			System.out.println("=====================================");
		} else if (dinheiro2 > dinheiro1) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[1]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro2);
			System.out.println("=====================================");
		}

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-24 13:16:59.830
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-24 13:16:59.836
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-24 13:17:00.522
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		// qtd jogadores
		int qtdJogadores = bemvindo();

		// nomes
		String[] nomes = pedirnomes(qtdJogadores);

		// regras
		regras();

		// Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		}

		// com 2 jogadores
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;
			int jg1 = 0, jg2 = 0;

			if (carro == 1) {

				// se o 1° jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}

						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									System.out.println();
									dinheiro1 += 5000;
									jg1 += 2;

								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}

						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro1 += 5000;
									System.out.println();
									jg1 += 2;
								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");

						}

					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			ganhador2(dinheiro1, dinheiro2, nomes);
			System.out.println();
			if(dinheiro1 > dinheiro2) {
				ranking(dinheiro1,nomes[0]);
			}
			else(dinheiro2 > dinheiro1)
		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (i == 21 && poscarro1 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1);
			} else if (i == 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][21], nome[1], valor2);
			} else if (i == 21 && poscarro1 >= 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1, nome[1], valor2);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}
		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1:
			situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			break;
		case 2:
			situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			break;
		case 3:
			situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			break;
		case 4:
			situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			break;
		case 5:
			situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
			break;
		case 6:
			situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			break;
		case 7:
			situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			break;
		case 8:
			situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			break;
		case 9:
			situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			break;
		case 10:
			situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			break;
		}
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1:
			valor = -1000;
			break;
		case 2:
			valor = 2000;
			break;
		case 3:
			valor = -400;
			break;
		case 4:
			valor = 1000;
			break;
		case 5:
			valor = -300;
			break;
		case 6:
			valor = 2500;
			break;
		case 7:
			valor = -500;
			break;
		case 8:
			valor = 1000;
			break;
		case 9:
			valor = -600;
			break;
		case 10:
			valor = 500;
			break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		}

		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(double valor1, String nome1) {

		String[] nomes = new String[3];
		double[] valor = new double[3];
		nomes[0] = "pedro";
		nomes[1] = "bruno";
		nomes[2] = "kauan";
		valor[0] = 10000;
		valor[1] = 4000;
		valor[2] = 2000;

		if (valor1 > valor[0]) {
			valor[0] = valor1;
			nomes[0] = nome1;
		} else if (valor1 > valor[1]) {
			valor[1] = valor1;
			nomes[1] = nome1;
		} else if (valor1 > valor[2]) {
			valor[2] = valor1;
			nomes[2] = nome1;
		}

		System.out.println("===============================");
		System.out.println("          RANKING          ");
		int num = 1;

		for (int i = 0; i < nomes.length; i++) {
			System.out.println("-------------------------------");
			System.out.printf("%d° %10s : R$%7.2f %n", num, nomes[i], valor[i]);
			num++;
		}
		System.out.println("===============================");
	}

	public static void ganhador2(double dinheiro1, double dinheiro2, String[] nomes) {

		if (dinheiro1 == dinheiro2) {
			System.out.println("O ganhador foi os dois jogadores");
		} else if (dinheiro1 > dinheiro2) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[0]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro1);
			System.out.println("=====================================");
		} else if (dinheiro2 > dinheiro1) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[1]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro2);
			System.out.println("=====================================");
		}

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-24 13:17:00.537
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-24 13:17:00.543
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-24 13:17:03.704
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		// qtd jogadores
		int qtdJogadores = bemvindo();

		// nomes
		String[] nomes = pedirnomes(qtdJogadores);

		// regras
		regras();

		// Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		}

		// com 2 jogadores
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;
			int jg1 = 0, jg2 = 0;

			if (carro == 1) {

				// se o 1° jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}

						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									System.out.println();
									dinheiro1 += 5000;
									jg1 += 2;

								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}

						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro1 += 5000;
									System.out.println();
									jg1 += 2;
								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");

						}

					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			ganhador2(dinheiro1, dinheiro2, nomes);
			System.out.println();
			if(dinheiro1 > dinheiro2) {
				ranking(dinheiro1,nomes[0]);
			}
			else(dinheiro2 > dinheiro1){
				
			}
		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (i == 21 && poscarro1 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1);
			} else if (i == 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][21], nome[1], valor2);
			} else if (i == 21 && poscarro1 >= 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1, nome[1], valor2);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}
		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1:
			situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			break;
		case 2:
			situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			break;
		case 3:
			situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			break;
		case 4:
			situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			break;
		case 5:
			situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
			break;
		case 6:
			situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			break;
		case 7:
			situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			break;
		case 8:
			situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			break;
		case 9:
			situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			break;
		case 10:
			situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			break;
		}
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1:
			valor = -1000;
			break;
		case 2:
			valor = 2000;
			break;
		case 3:
			valor = -400;
			break;
		case 4:
			valor = 1000;
			break;
		case 5:
			valor = -300;
			break;
		case 6:
			valor = 2500;
			break;
		case 7:
			valor = -500;
			break;
		case 8:
			valor = 1000;
			break;
		case 9:
			valor = -600;
			break;
		case 10:
			valor = 500;
			break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		}

		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(double valor1, String nome1) {

		String[] nomes = new String[3];
		double[] valor = new double[3];
		nomes[0] = "pedro";
		nomes[1] = "bruno";
		nomes[2] = "kauan";
		valor[0] = 10000;
		valor[1] = 4000;
		valor[2] = 2000;

		if (valor1 > valor[0]) {
			valor[0] = valor1;
			nomes[0] = nome1;
		} else if (valor1 > valor[1]) {
			valor[1] = valor1;
			nomes[1] = nome1;
		} else if (valor1 > valor[2]) {
			valor[2] = valor1;
			nomes[2] = nome1;
		}

		System.out.println("===============================");
		System.out.println("          RANKING          ");
		int num = 1;

		for (int i = 0; i < nomes.length; i++) {
			System.out.println("-------------------------------");
			System.out.printf("%d° %10s : R$%7.2f %n", num, nomes[i], valor[i]);
			num++;
		}
		System.out.println("===============================");
	}

	public static void ganhador2(double dinheiro1, double dinheiro2, String[] nomes) {

		if (dinheiro1 == dinheiro2) {
			System.out.println("O ganhador foi os dois jogadores");
		} else if (dinheiro1 > dinheiro2) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[0]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro1);
			System.out.println("=====================================");
		} else if (dinheiro2 > dinheiro1) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[1]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro2);
			System.out.println("=====================================");
		}

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-24 13:17:03.724
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-24 13:17:03.738
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-24 13:17:04.558
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		// qtd jogadores
		int qtdJogadores = bemvindo();

		// nomes
		String[] nomes = pedirnomes(qtdJogadores);

		// regras
		regras();

		// Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		}

		// com 2 jogadores
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;
			int jg1 = 0, jg2 = 0;

			if (carro == 1) {

				// se o 1° jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}

						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									System.out.println();
									dinheiro1 += 5000;
									jg1 += 2;

								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}

						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro1 += 5000;
									System.out.println();
									jg1 += 2;
								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");

						}

					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			ganhador2(dinheiro1, dinheiro2, nomes);
			System.out.println();
			if(dinheiro1 > dinheiro2) {
				ranking(dinheiro1,nomes[0]);
			}
			else(dinheiro2 > dinheiro1){
				
			}
		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (i == 21 && poscarro1 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1);
			} else if (i == 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][21], nome[1], valor2);
			} else if (i == 21 && poscarro1 >= 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1, nome[1], valor2);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}
		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1:
			situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			break;
		case 2:
			situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			break;
		case 3:
			situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			break;
		case 4:
			situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			break;
		case 5:
			situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
			break;
		case 6:
			situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			break;
		case 7:
			situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			break;
		case 8:
			situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			break;
		case 9:
			situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			break;
		case 10:
			situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			break;
		}
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1:
			valor = -1000;
			break;
		case 2:
			valor = 2000;
			break;
		case 3:
			valor = -400;
			break;
		case 4:
			valor = 1000;
			break;
		case 5:
			valor = -300;
			break;
		case 6:
			valor = 2500;
			break;
		case 7:
			valor = -500;
			break;
		case 8:
			valor = 1000;
			break;
		case 9:
			valor = -600;
			break;
		case 10:
			valor = 500;
			break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		}

		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(double valor1, String nome1) {

		String[] nomes = new String[3];
		double[] valor = new double[3];
		nomes[0] = "pedro";
		nomes[1] = "bruno";
		nomes[2] = "kauan";
		valor[0] = 10000;
		valor[1] = 4000;
		valor[2] = 2000;

		if (valor1 > valor[0]) {
			valor[0] = valor1;
			nomes[0] = nome1;
		} else if (valor1 > valor[1]) {
			valor[1] = valor1;
			nomes[1] = nome1;
		} else if (valor1 > valor[2]) {
			valor[2] = valor1;
			nomes[2] = nome1;
		}

		System.out.println("===============================");
		System.out.println("          RANKING          ");
		int num = 1;

		for (int i = 0; i < nomes.length; i++) {
			System.out.println("-------------------------------");
			System.out.printf("%d° %10s : R$%7.2f %n", num, nomes[i], valor[i]);
			num++;
		}
		System.out.println("===============================");
	}

	public static void ganhador2(double dinheiro1, double dinheiro2, String[] nomes) {

		if (dinheiro1 == dinheiro2) {
			System.out.println("O ganhador foi os dois jogadores");
		} else if (dinheiro1 > dinheiro2) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[0]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro1);
			System.out.println("=====================================");
		} else if (dinheiro2 > dinheiro1) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[1]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro2);
			System.out.println("=====================================");
		}

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-24 13:17:04.571
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-24 13:17:04.577
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-24 13:17:05.924
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		// qtd jogadores
		int qtdJogadores = bemvindo();

		// nomes
		String[] nomes = pedirnomes(qtdJogadores);

		// regras
		regras();

		// Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		}

		// com 2 jogadores
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;
			int jg1 = 0, jg2 = 0;

			if (carro == 1) {

				// se o 1° jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}

						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									System.out.println();
									dinheiro1 += 5000;
									jg1 += 2;

								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}

						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro1 += 5000;
									System.out.println();
									jg1 += 2;
								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");

						}

					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			ganhador2(dinheiro1, dinheiro2, nomes);
			System.out.println();
			if(dinheiro1 > dinheiro2) {
				ranking(dinheiro1,nomes[0]);
			}
			else(dinheiro2 > dinheiro1){
				tan
			}
		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (i == 21 && poscarro1 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1);
			} else if (i == 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][21], nome[1], valor2);
			} else if (i == 21 && poscarro1 >= 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1, nome[1], valor2);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}
		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1:
			situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			break;
		case 2:
			situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			break;
		case 3:
			situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			break;
		case 4:
			situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			break;
		case 5:
			situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
			break;
		case 6:
			situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			break;
		case 7:
			situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			break;
		case 8:
			situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			break;
		case 9:
			situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			break;
		case 10:
			situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			break;
		}
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1:
			valor = -1000;
			break;
		case 2:
			valor = 2000;
			break;
		case 3:
			valor = -400;
			break;
		case 4:
			valor = 1000;
			break;
		case 5:
			valor = -300;
			break;
		case 6:
			valor = 2500;
			break;
		case 7:
			valor = -500;
			break;
		case 8:
			valor = 1000;
			break;
		case 9:
			valor = -600;
			break;
		case 10:
			valor = 500;
			break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		}

		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(double valor1, String nome1) {

		String[] nomes = new String[3];
		double[] valor = new double[3];
		nomes[0] = "pedro";
		nomes[1] = "bruno";
		nomes[2] = "kauan";
		valor[0] = 10000;
		valor[1] = 4000;
		valor[2] = 2000;

		if (valor1 > valor[0]) {
			valor[0] = valor1;
			nomes[0] = nome1;
		} else if (valor1 > valor[1]) {
			valor[1] = valor1;
			nomes[1] = nome1;
		} else if (valor1 > valor[2]) {
			valor[2] = valor1;
			nomes[2] = nome1;
		}

		System.out.println("===============================");
		System.out.println("          RANKING          ");
		int num = 1;

		for (int i = 0; i < nomes.length; i++) {
			System.out.println("-------------------------------");
			System.out.printf("%d° %10s : R$%7.2f %n", num, nomes[i], valor[i]);
			num++;
		}
		System.out.println("===============================");
	}

	public static void ganhador2(double dinheiro1, double dinheiro2, String[] nomes) {

		if (dinheiro1 == dinheiro2) {
			System.out.println("O ganhador foi os dois jogadores");
		} else if (dinheiro1 > dinheiro2) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[0]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro1);
			System.out.println("=====================================");
		} else if (dinheiro2 > dinheiro1) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[1]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro2);
			System.out.println("=====================================");
		}

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-24 13:17:05.948
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-24 13:17:05.954
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-24 13:17:07.543
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		// qtd jogadores
		int qtdJogadores = bemvindo();

		// nomes
		String[] nomes = pedirnomes(qtdJogadores);

		// regras
		regras();

		// Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		}

		// com 2 jogadores
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;
			int jg1 = 0, jg2 = 0;

			if (carro == 1) {

				// se o 1° jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}

						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									System.out.println();
									dinheiro1 += 5000;
									jg1 += 2;

								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}

						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro1 += 5000;
									System.out.println();
									jg1 += 2;
								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");

						}

					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			ganhador2(dinheiro1, dinheiro2, nomes);
			System.out.println();
			if(dinheiro1 > dinheiro2) {
				ranking(dinheiro1,nomes[0]);
			}
			else(dinheiro2 > dinheiro1){
				EnumConstantNotPresentException
			}
		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (i == 21 && poscarro1 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1);
			} else if (i == 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][21], nome[1], valor2);
			} else if (i == 21 && poscarro1 >= 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1, nome[1], valor2);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}
		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1:
			situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			break;
		case 2:
			situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			break;
		case 3:
			situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			break;
		case 4:
			situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			break;
		case 5:
			situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
			break;
		case 6:
			situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			break;
		case 7:
			situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			break;
		case 8:
			situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			break;
		case 9:
			situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			break;
		case 10:
			situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			break;
		}
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1:
			valor = -1000;
			break;
		case 2:
			valor = 2000;
			break;
		case 3:
			valor = -400;
			break;
		case 4:
			valor = 1000;
			break;
		case 5:
			valor = -300;
			break;
		case 6:
			valor = 2500;
			break;
		case 7:
			valor = -500;
			break;
		case 8:
			valor = 1000;
			break;
		case 9:
			valor = -600;
			break;
		case 10:
			valor = 500;
			break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		}

		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(double valor1, String nome1) {

		String[] nomes = new String[3];
		double[] valor = new double[3];
		nomes[0] = "pedro";
		nomes[1] = "bruno";
		nomes[2] = "kauan";
		valor[0] = 10000;
		valor[1] = 4000;
		valor[2] = 2000;

		if (valor1 > valor[0]) {
			valor[0] = valor1;
			nomes[0] = nome1;
		} else if (valor1 > valor[1]) {
			valor[1] = valor1;
			nomes[1] = nome1;
		} else if (valor1 > valor[2]) {
			valor[2] = valor1;
			nomes[2] = nome1;
		}

		System.out.println("===============================");
		System.out.println("          RANKING          ");
		int num = 1;

		for (int i = 0; i < nomes.length; i++) {
			System.out.println("-------------------------------");
			System.out.printf("%d° %10s : R$%7.2f %n", num, nomes[i], valor[i]);
			num++;
		}
		System.out.println("===============================");
	}

	public static void ganhador2(double dinheiro1, double dinheiro2, String[] nomes) {

		if (dinheiro1 == dinheiro2) {
			System.out.println("O ganhador foi os dois jogadores");
		} else if (dinheiro1 > dinheiro2) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[0]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro1);
			System.out.println("=====================================");
		} else if (dinheiro2 > dinheiro1) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[1]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro2);
			System.out.println("=====================================");
		}

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-24 13:17:07.568
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-24 13:17:07.574
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-24 13:17:08.308
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		// qtd jogadores
		int qtdJogadores = bemvindo();

		// nomes
		String[] nomes = pedirnomes(qtdJogadores);

		// regras
		regras();

		// Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		}

		// com 2 jogadores
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;
			int jg1 = 0, jg2 = 0;

			if (carro == 1) {

				// se o 1° jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}

						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									System.out.println();
									dinheiro1 += 5000;
									jg1 += 2;

								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}

						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro1 += 5000;
									System.out.println();
									jg1 += 2;
								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");

						}

					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			ganhador2(dinheiro1, dinheiro2, nomes);
			System.out.println();
			if(dinheiro1 > dinheiro2) {
				ranking(dinheiro1,nomes[0]);
			}
			else(dinheiro2 > dinheiro1){
				EnumConstantNotPresentException
			}
		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (i == 21 && poscarro1 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1);
			} else if (i == 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][21], nome[1], valor2);
			} else if (i == 21 && poscarro1 >= 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1, nome[1], valor2);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}
		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1:
			situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			break;
		case 2:
			situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			break;
		case 3:
			situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			break;
		case 4:
			situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			break;
		case 5:
			situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
			break;
		case 6:
			situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			break;
		case 7:
			situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			break;
		case 8:
			situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			break;
		case 9:
			situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			break;
		case 10:
			situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			break;
		}
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1:
			valor = -1000;
			break;
		case 2:
			valor = 2000;
			break;
		case 3:
			valor = -400;
			break;
		case 4:
			valor = 1000;
			break;
		case 5:
			valor = -300;
			break;
		case 6:
			valor = 2500;
			break;
		case 7:
			valor = -500;
			break;
		case 8:
			valor = 1000;
			break;
		case 9:
			valor = -600;
			break;
		case 10:
			valor = 500;
			break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		}

		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(double valor1, String nome1) {

		String[] nomes = new String[3];
		double[] valor = new double[3];
		nomes[0] = "pedro";
		nomes[1] = "bruno";
		nomes[2] = "kauan";
		valor[0] = 10000;
		valor[1] = 4000;
		valor[2] = 2000;

		if (valor1 > valor[0]) {
			valor[0] = valor1;
			nomes[0] = nome1;
		} else if (valor1 > valor[1]) {
			valor[1] = valor1;
			nomes[1] = nome1;
		} else if (valor1 > valor[2]) {
			valor[2] = valor1;
			nomes[2] = nome1;
		}

		System.out.println("===============================");
		System.out.println("          RANKING          ");
		int num = 1;

		for (int i = 0; i < nomes.length; i++) {
			System.out.println("-------------------------------");
			System.out.printf("%d° %10s : R$%7.2f %n", num, nomes[i], valor[i]);
			num++;
		}
		System.out.println("===============================");
	}

	public static void ganhador2(double dinheiro1, double dinheiro2, String[] nomes) {

		if (dinheiro1 == dinheiro2) {
			System.out.println("O ganhador foi os dois jogadores");
		} else if (dinheiro1 > dinheiro2) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[0]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro1);
			System.out.println("=====================================");
		} else if (dinheiro2 > dinheiro1) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[1]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro2);
			System.out.println("=====================================");
		}

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-24 13:17:08.325
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-24 13:17:08.338
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-24 13:17:10.932
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		// qtd jogadores
		int qtdJogadores = bemvindo();

		// nomes
		String[] nomes = pedirnomes(qtdJogadores);

		// regras
		regras();

		// Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		}

		// com 2 jogadores
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;
			int jg1 = 0, jg2 = 0;

			if (carro == 1) {

				// se o 1° jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}

						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									System.out.println();
									dinheiro1 += 5000;
									jg1 += 2;

								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}

						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro1 += 5000;
									System.out.println();
									jg1 += 2;
								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");

						}

					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			ganhador2(dinheiro1, dinheiro2, nomes);
			System.out.println();
			if(dinheiro1 > dinheiro2) {
				ranking(dinheiro1,nomes[0]);
			}
			else(dinheiro2 > dinheiro1){
				tan
			}
		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (i == 21 && poscarro1 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1);
			} else if (i == 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][21], nome[1], valor2);
			} else if (i == 21 && poscarro1 >= 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1, nome[1], valor2);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}
		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1:
			situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			break;
		case 2:
			situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			break;
		case 3:
			situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			break;
		case 4:
			situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			break;
		case 5:
			situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
			break;
		case 6:
			situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			break;
		case 7:
			situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			break;
		case 8:
			situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			break;
		case 9:
			situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			break;
		case 10:
			situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			break;
		}
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1:
			valor = -1000;
			break;
		case 2:
			valor = 2000;
			break;
		case 3:
			valor = -400;
			break;
		case 4:
			valor = 1000;
			break;
		case 5:
			valor = -300;
			break;
		case 6:
			valor = 2500;
			break;
		case 7:
			valor = -500;
			break;
		case 8:
			valor = 1000;
			break;
		case 9:
			valor = -600;
			break;
		case 10:
			valor = 500;
			break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		}

		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(double valor1, String nome1) {

		String[] nomes = new String[3];
		double[] valor = new double[3];
		nomes[0] = "pedro";
		nomes[1] = "bruno";
		nomes[2] = "kauan";
		valor[0] = 10000;
		valor[1] = 4000;
		valor[2] = 2000;

		if (valor1 > valor[0]) {
			valor[0] = valor1;
			nomes[0] = nome1;
		} else if (valor1 > valor[1]) {
			valor[1] = valor1;
			nomes[1] = nome1;
		} else if (valor1 > valor[2]) {
			valor[2] = valor1;
			nomes[2] = nome1;
		}

		System.out.println("===============================");
		System.out.println("          RANKING          ");
		int num = 1;

		for (int i = 0; i < nomes.length; i++) {
			System.out.println("-------------------------------");
			System.out.printf("%d° %10s : R$%7.2f %n", num, nomes[i], valor[i]);
			num++;
		}
		System.out.println("===============================");
	}

	public static void ganhador2(double dinheiro1, double dinheiro2, String[] nomes) {

		if (dinheiro1 == dinheiro2) {
			System.out.println("O ganhador foi os dois jogadores");
		} else if (dinheiro1 > dinheiro2) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[0]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro1);
			System.out.println("=====================================");
		} else if (dinheiro2 > dinheiro1) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[1]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro2);
			System.out.println("=====================================");
		}

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-24 13:17:10.954
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-24 13:17:10.960
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-24 13:17:11.905
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		// qtd jogadores
		int qtdJogadores = bemvindo();

		// nomes
		String[] nomes = pedirnomes(qtdJogadores);

		// regras
		regras();

		// Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		}

		// com 2 jogadores
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;
			int jg1 = 0, jg2 = 0;

			if (carro == 1) {

				// se o 1° jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}

						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									System.out.println();
									dinheiro1 += 5000;
									jg1 += 2;

								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}

						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro1 += 5000;
									System.out.println();
									jg1 += 2;
								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");

						}

					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			ganhador2(dinheiro1, dinheiro2, nomes);
			System.out.println();
			if(dinheiro1 > dinheiro2) {
				ranking(dinheiro1,nomes[0]);
			}
			else(dinheiro2 > dinheiro1){
				
			}
		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (i == 21 && poscarro1 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1);
			} else if (i == 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][21], nome[1], valor2);
			} else if (i == 21 && poscarro1 >= 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1, nome[1], valor2);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}
		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1:
			situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			break;
		case 2:
			situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			break;
		case 3:
			situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			break;
		case 4:
			situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			break;
		case 5:
			situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
			break;
		case 6:
			situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			break;
		case 7:
			situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			break;
		case 8:
			situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			break;
		case 9:
			situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			break;
		case 10:
			situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			break;
		}
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1:
			valor = -1000;
			break;
		case 2:
			valor = 2000;
			break;
		case 3:
			valor = -400;
			break;
		case 4:
			valor = 1000;
			break;
		case 5:
			valor = -300;
			break;
		case 6:
			valor = 2500;
			break;
		case 7:
			valor = -500;
			break;
		case 8:
			valor = 1000;
			break;
		case 9:
			valor = -600;
			break;
		case 10:
			valor = 500;
			break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		}

		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(double valor1, String nome1) {

		String[] nomes = new String[3];
		double[] valor = new double[3];
		nomes[0] = "pedro";
		nomes[1] = "bruno";
		nomes[2] = "kauan";
		valor[0] = 10000;
		valor[1] = 4000;
		valor[2] = 2000;

		if (valor1 > valor[0]) {
			valor[0] = valor1;
			nomes[0] = nome1;
		} else if (valor1 > valor[1]) {
			valor[1] = valor1;
			nomes[1] = nome1;
		} else if (valor1 > valor[2]) {
			valor[2] = valor1;
			nomes[2] = nome1;
		}

		System.out.println("===============================");
		System.out.println("          RANKING          ");
		int num = 1;

		for (int i = 0; i < nomes.length; i++) {
			System.out.println("-------------------------------");
			System.out.printf("%d° %10s : R$%7.2f %n", num, nomes[i], valor[i]);
			num++;
		}
		System.out.println("===============================");
	}

	public static void ganhador2(double dinheiro1, double dinheiro2, String[] nomes) {

		if (dinheiro1 == dinheiro2) {
			System.out.println("O ganhador foi os dois jogadores");
		} else if (dinheiro1 > dinheiro2) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[0]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro1);
			System.out.println("=====================================");
		} else if (dinheiro2 > dinheiro1) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[1]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro2);
			System.out.println("=====================================");
		}

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-24 13:17:11.916
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-24 13:17:11.922
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-24 13:17:12.675
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		// qtd jogadores
		int qtdJogadores = bemvindo();

		// nomes
		String[] nomes = pedirnomes(qtdJogadores);

		// regras
		regras();

		// Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		}

		// com 2 jogadores
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;
			int jg1 = 0, jg2 = 0;

			if (carro == 1) {

				// se o 1° jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}

						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									System.out.println();
									dinheiro1 += 5000;
									jg1 += 2;

								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}

						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro1 += 5000;
									System.out.println();
									jg1 += 2;
								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");

						}

					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			ganhador2(dinheiro1, dinheiro2, nomes);
			System.out.println();
			if(dinheiro1 > dinheiro2) {
				ranking(dinheiro1,nomes[0]);
			}
			else(dinheiro2 > dinheiro1){
				ran
			}
		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (i == 21 && poscarro1 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1);
			} else if (i == 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][21], nome[1], valor2);
			} else if (i == 21 && poscarro1 >= 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1, nome[1], valor2);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}
		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1:
			situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			break;
		case 2:
			situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			break;
		case 3:
			situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			break;
		case 4:
			situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			break;
		case 5:
			situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
			break;
		case 6:
			situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			break;
		case 7:
			situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			break;
		case 8:
			situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			break;
		case 9:
			situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			break;
		case 10:
			situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			break;
		}
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1:
			valor = -1000;
			break;
		case 2:
			valor = 2000;
			break;
		case 3:
			valor = -400;
			break;
		case 4:
			valor = 1000;
			break;
		case 5:
			valor = -300;
			break;
		case 6:
			valor = 2500;
			break;
		case 7:
			valor = -500;
			break;
		case 8:
			valor = 1000;
			break;
		case 9:
			valor = -600;
			break;
		case 10:
			valor = 500;
			break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		}

		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(double valor1, String nome1) {

		String[] nomes = new String[3];
		double[] valor = new double[3];
		nomes[0] = "pedro";
		nomes[1] = "bruno";
		nomes[2] = "kauan";
		valor[0] = 10000;
		valor[1] = 4000;
		valor[2] = 2000;

		if (valor1 > valor[0]) {
			valor[0] = valor1;
			nomes[0] = nome1;
		} else if (valor1 > valor[1]) {
			valor[1] = valor1;
			nomes[1] = nome1;
		} else if (valor1 > valor[2]) {
			valor[2] = valor1;
			nomes[2] = nome1;
		}

		System.out.println("===============================");
		System.out.println("          RANKING          ");
		int num = 1;

		for (int i = 0; i < nomes.length; i++) {
			System.out.println("-------------------------------");
			System.out.printf("%d° %10s : R$%7.2f %n", num, nomes[i], valor[i]);
			num++;
		}
		System.out.println("===============================");
	}

	public static void ganhador2(double dinheiro1, double dinheiro2, String[] nomes) {

		if (dinheiro1 == dinheiro2) {
			System.out.println("O ganhador foi os dois jogadores");
		} else if (dinheiro1 > dinheiro2) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[0]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro1);
			System.out.println("=====================================");
		} else if (dinheiro2 > dinheiro1) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[1]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro2);
			System.out.println("=====================================");
		}

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-24 13:17:12.700
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-24 13:17:12.706
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-24 13:17:12.721
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		// qtd jogadores
		int qtdJogadores = bemvindo();

		// nomes
		String[] nomes = pedirnomes(qtdJogadores);

		// regras
		regras();

		// Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		}

		// com 2 jogadores
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;
			int jg1 = 0, jg2 = 0;

			if (carro == 1) {

				// se o 1° jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}

						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									System.out.println();
									dinheiro1 += 5000;
									jg1 += 2;

								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}

						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro1 += 5000;
									System.out.println();
									jg1 += 2;
								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");

						}

					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			ganhador2(dinheiro1, dinheiro2, nomes);
			System.out.println();
			if(dinheiro1 > dinheiro2) {
				ranking(dinheiro1,nomes[0]);
			}
			else(dinheiro2 > dinheiro1){
				ran
			}
		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (i == 21 && poscarro1 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1);
			} else if (i == 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][21], nome[1], valor2);
			} else if (i == 21 && poscarro1 >= 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1, nome[1], valor2);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}
		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1:
			situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			break;
		case 2:
			situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			break;
		case 3:
			situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			break;
		case 4:
			situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			break;
		case 5:
			situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
			break;
		case 6:
			situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			break;
		case 7:
			situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			break;
		case 8:
			situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			break;
		case 9:
			situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			break;
		case 10:
			situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			break;
		}
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1:
			valor = -1000;
			break;
		case 2:
			valor = 2000;
			break;
		case 3:
			valor = -400;
			break;
		case 4:
			valor = 1000;
			break;
		case 5:
			valor = -300;
			break;
		case 6:
			valor = 2500;
			break;
		case 7:
			valor = -500;
			break;
		case 8:
			valor = 1000;
			break;
		case 9:
			valor = -600;
			break;
		case 10:
			valor = 500;
			break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		}

		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(double valor1, String nome1) {

		String[] nomes = new String[3];
		double[] valor = new double[3];
		nomes[0] = "pedro";
		nomes[1] = "bruno";
		nomes[2] = "kauan";
		valor[0] = 10000;
		valor[1] = 4000;
		valor[2] = 2000;

		if (valor1 > valor[0]) {
			valor[0] = valor1;
			nomes[0] = nome1;
		} else if (valor1 > valor[1]) {
			valor[1] = valor1;
			nomes[1] = nome1;
		} else if (valor1 > valor[2]) {
			valor[2] = valor1;
			nomes[2] = nome1;
		}

		System.out.println("===============================");
		System.out.println("          RANKING          ");
		int num = 1;

		for (int i = 0; i < nomes.length; i++) {
			System.out.println("-------------------------------");
			System.out.printf("%d° %10s : R$%7.2f %n", num, nomes[i], valor[i]);
			num++;
		}
		System.out.println("===============================");
	}

	public static void ganhador2(double dinheiro1, double dinheiro2, String[] nomes) {

		if (dinheiro1 == dinheiro2) {
			System.out.println("O ganhador foi os dois jogadores");
		} else if (dinheiro1 > dinheiro2) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[0]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro1);
			System.out.println("=====================================");
		} else if (dinheiro2 > dinheiro1) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[1]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro2);
			System.out.println("=====================================");
		}

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-24 13:17:12.741
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-24 13:17:12.760
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-24 13:17:13.926
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		// qtd jogadores
		int qtdJogadores = bemvindo();

		// nomes
		String[] nomes = pedirnomes(qtdJogadores);

		// regras
		regras();

		// Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		}

		// com 2 jogadores
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;
			int jg1 = 0, jg2 = 0;

			if (carro == 1) {

				// se o 1° jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}

						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									System.out.println();
									dinheiro1 += 5000;
									jg1 += 2;

								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}

						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro1 += 5000;
									System.out.println();
									jg1 += 2;
								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");

						}

					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			ganhador2(dinheiro1, dinheiro2, nomes);
			System.out.println();
			if(dinheiro1 > dinheiro2) {
				ranking(dinheiro1,nomes[0]);
			}
			else(dinheiro2 > dinheiro1){
				ran
			}
		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (i == 21 && poscarro1 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1);
			} else if (i == 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][21], nome[1], valor2);
			} else if (i == 21 && poscarro1 >= 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1, nome[1], valor2);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}
		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1:
			situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			break;
		case 2:
			situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			break;
		case 3:
			situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			break;
		case 4:
			situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			break;
		case 5:
			situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
			break;
		case 6:
			situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			break;
		case 7:
			situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			break;
		case 8:
			situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			break;
		case 9:
			situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			break;
		case 10:
			situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			break;
		}
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1:
			valor = -1000;
			break;
		case 2:
			valor = 2000;
			break;
		case 3:
			valor = -400;
			break;
		case 4:
			valor = 1000;
			break;
		case 5:
			valor = -300;
			break;
		case 6:
			valor = 2500;
			break;
		case 7:
			valor = -500;
			break;
		case 8:
			valor = 1000;
			break;
		case 9:
			valor = -600;
			break;
		case 10:
			valor = 500;
			break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		}

		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(double valor1, String nome1) {

		String[] nomes = new String[3];
		double[] valor = new double[3];
		nomes[0] = "pedro";
		nomes[1] = "bruno";
		nomes[2] = "kauan";
		valor[0] = 10000;
		valor[1] = 4000;
		valor[2] = 2000;

		if (valor1 > valor[0]) {
			valor[0] = valor1;
			nomes[0] = nome1;
		} else if (valor1 > valor[1]) {
			valor[1] = valor1;
			nomes[1] = nome1;
		} else if (valor1 > valor[2]) {
			valor[2] = valor1;
			nomes[2] = nome1;
		}

		System.out.println("===============================");
		System.out.println("          RANKING          ");
		int num = 1;

		for (int i = 0; i < nomes.length; i++) {
			System.out.println("-------------------------------");
			System.out.printf("%d° %10s : R$%7.2f %n", num, nomes[i], valor[i]);
			num++;
		}
		System.out.println("===============================");
	}

	public static void ganhador2(double dinheiro1, double dinheiro2, String[] nomes) {

		if (dinheiro1 == dinheiro2) {
			System.out.println("O ganhador foi os dois jogadores");
		} else if (dinheiro1 > dinheiro2) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[0]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro1);
			System.out.println("=====================================");
		} else if (dinheiro2 > dinheiro1) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[1]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro2);
			System.out.println("=====================================");
		}

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-24 13:17:13.979
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-24 13:17:13.985
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-24 13:17:14.609
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		// qtd jogadores
		int qtdJogadores = bemvindo();

		// nomes
		String[] nomes = pedirnomes(qtdJogadores);

		// regras
		regras();

		// Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		}

		// com 2 jogadores
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;
			int jg1 = 0, jg2 = 0;

			if (carro == 1) {

				// se o 1° jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}

						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									System.out.println();
									dinheiro1 += 5000;
									jg1 += 2;

								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}

						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro1 += 5000;
									System.out.println();
									jg1 += 2;
								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");

						}

					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			ganhador2(dinheiro1, dinheiro2, nomes);
			System.out.println();
			if(dinheiro1 > dinheiro2) {
				ranking(dinheiro1,nomes[0]);
			}
			else(dinheiro2 > dinheiro1){
				ranking(valor1, null);
			}
		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (i == 21 && poscarro1 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1);
			} else if (i == 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][21], nome[1], valor2);
			} else if (i == 21 && poscarro1 >= 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1, nome[1], valor2);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}
		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1:
			situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			break;
		case 2:
			situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			break;
		case 3:
			situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			break;
		case 4:
			situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			break;
		case 5:
			situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
			break;
		case 6:
			situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			break;
		case 7:
			situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			break;
		case 8:
			situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			break;
		case 9:
			situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			break;
		case 10:
			situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			break;
		}
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1:
			valor = -1000;
			break;
		case 2:
			valor = 2000;
			break;
		case 3:
			valor = -400;
			break;
		case 4:
			valor = 1000;
			break;
		case 5:
			valor = -300;
			break;
		case 6:
			valor = 2500;
			break;
		case 7:
			valor = -500;
			break;
		case 8:
			valor = 1000;
			break;
		case 9:
			valor = -600;
			break;
		case 10:
			valor = 500;
			break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		}

		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(double valor1, String nome1) {

		String[] nomes = new String[3];
		double[] valor = new double[3];
		nomes[0] = "pedro";
		nomes[1] = "bruno";
		nomes[2] = "kauan";
		valor[0] = 10000;
		valor[1] = 4000;
		valor[2] = 2000;

		if (valor1 > valor[0]) {
			valor[0] = valor1;
			nomes[0] = nome1;
		} else if (valor1 > valor[1]) {
			valor[1] = valor1;
			nomes[1] = nome1;
		} else if (valor1 > valor[2]) {
			valor[2] = valor1;
			nomes[2] = nome1;
		}

		System.out.println("===============================");
		System.out.println("          RANKING          ");
		int num = 1;

		for (int i = 0; i < nomes.length; i++) {
			System.out.println("-------------------------------");
			System.out.printf("%d° %10s : R$%7.2f %n", num, nomes[i], valor[i]);
			num++;
		}
		System.out.println("===============================");
	}

	public static void ganhador2(double dinheiro1, double dinheiro2, String[] nomes) {

		if (dinheiro1 == dinheiro2) {
			System.out.println("O ganhador foi os dois jogadores");
		} else if (dinheiro1 > dinheiro2) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[0]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro1);
			System.out.println("=====================================");
		} else if (dinheiro2 > dinheiro1) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[1]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro2);
			System.out.println("=====================================");
		}

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-24 13:17:14.634
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-24 13:17:14.640
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-24 13:17:17.783
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		// qtd jogadores
		int qtdJogadores = bemvindo();

		// nomes
		String[] nomes = pedirnomes(qtdJogadores);

		// regras
		regras();

		// Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		}

		// com 2 jogadores
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;
			int jg1 = 0, jg2 = 0;

			if (carro == 1) {

				// se o 1° jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}

						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									System.out.println();
									dinheiro1 += 5000;
									jg1 += 2;

								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}

						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro1 += 5000;
									System.out.println();
									jg1 += 2;
								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");

						}

					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			ganhador2(dinheiro1, dinheiro2, nomes);
			System.out.println();
			if(dinheiro1 > dinheiro2) {
				ranking(dinheiro1,nomes[0]);
			}
			else(dinheiro2 > dinheiro1){
				ranking(dinheiro2, null);
			}
		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (i == 21 && poscarro1 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1);
			} else if (i == 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][21], nome[1], valor2);
			} else if (i == 21 && poscarro1 >= 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1, nome[1], valor2);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}
		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1:
			situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			break;
		case 2:
			situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			break;
		case 3:
			situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			break;
		case 4:
			situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			break;
		case 5:
			situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
			break;
		case 6:
			situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			break;
		case 7:
			situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			break;
		case 8:
			situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			break;
		case 9:
			situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			break;
		case 10:
			situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			break;
		}
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1:
			valor = -1000;
			break;
		case 2:
			valor = 2000;
			break;
		case 3:
			valor = -400;
			break;
		case 4:
			valor = 1000;
			break;
		case 5:
			valor = -300;
			break;
		case 6:
			valor = 2500;
			break;
		case 7:
			valor = -500;
			break;
		case 8:
			valor = 1000;
			break;
		case 9:
			valor = -600;
			break;
		case 10:
			valor = 500;
			break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		}

		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(double valor1, String nome1) {

		String[] nomes = new String[3];
		double[] valor = new double[3];
		nomes[0] = "pedro";
		nomes[1] = "bruno";
		nomes[2] = "kauan";
		valor[0] = 10000;
		valor[1] = 4000;
		valor[2] = 2000;

		if (valor1 > valor[0]) {
			valor[0] = valor1;
			nomes[0] = nome1;
		} else if (valor1 > valor[1]) {
			valor[1] = valor1;
			nomes[1] = nome1;
		} else if (valor1 > valor[2]) {
			valor[2] = valor1;
			nomes[2] = nome1;
		}

		System.out.println("===============================");
		System.out.println("          RANKING          ");
		int num = 1;

		for (int i = 0; i < nomes.length; i++) {
			System.out.println("-------------------------------");
			System.out.printf("%d° %10s : R$%7.2f %n", num, nomes[i], valor[i]);
			num++;
		}
		System.out.println("===============================");
	}

	public static void ganhador2(double dinheiro1, double dinheiro2, String[] nomes) {

		if (dinheiro1 == dinheiro2) {
			System.out.println("O ganhador foi os dois jogadores");
		} else if (dinheiro1 > dinheiro2) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[0]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro1);
			System.out.println("=====================================");
		} else if (dinheiro2 > dinheiro1) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[1]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro2);
			System.out.println("=====================================");
		}

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-24 13:17:17.808
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-24 13:17:17.813
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-24 13:17:19.341
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		// qtd jogadores
		int qtdJogadores = bemvindo();

		// nomes
		String[] nomes = pedirnomes(qtdJogadores);

		// regras
		regras();

		// Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		}

		// com 2 jogadores
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;
			int jg1 = 0, jg2 = 0;

			if (carro == 1) {

				// se o 1° jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}

						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									System.out.println();
									dinheiro1 += 5000;
									jg1 += 2;

								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}

						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro1 += 5000;
									System.out.println();
									jg1 += 2;
								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");

						}

					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			ganhador2(dinheiro1, dinheiro2, nomes);
			System.out.println();
			if(dinheiro1 > dinheiro2) {
				ranking(dinheiro1,nomes[0]);
			}
			else(dinheiro2 > dinheiro1){
				ranking(dinheiro2, );
			}
		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (i == 21 && poscarro1 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1);
			} else if (i == 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][21], nome[1], valor2);
			} else if (i == 21 && poscarro1 >= 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1, nome[1], valor2);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}
		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1:
			situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			break;
		case 2:
			situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			break;
		case 3:
			situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			break;
		case 4:
			situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			break;
		case 5:
			situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
			break;
		case 6:
			situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			break;
		case 7:
			situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			break;
		case 8:
			situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			break;
		case 9:
			situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			break;
		case 10:
			situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			break;
		}
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1:
			valor = -1000;
			break;
		case 2:
			valor = 2000;
			break;
		case 3:
			valor = -400;
			break;
		case 4:
			valor = 1000;
			break;
		case 5:
			valor = -300;
			break;
		case 6:
			valor = 2500;
			break;
		case 7:
			valor = -500;
			break;
		case 8:
			valor = 1000;
			break;
		case 9:
			valor = -600;
			break;
		case 10:
			valor = 500;
			break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		}

		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(double valor1, String nome1) {

		String[] nomes = new String[3];
		double[] valor = new double[3];
		nomes[0] = "pedro";
		nomes[1] = "bruno";
		nomes[2] = "kauan";
		valor[0] = 10000;
		valor[1] = 4000;
		valor[2] = 2000;

		if (valor1 > valor[0]) {
			valor[0] = valor1;
			nomes[0] = nome1;
		} else if (valor1 > valor[1]) {
			valor[1] = valor1;
			nomes[1] = nome1;
		} else if (valor1 > valor[2]) {
			valor[2] = valor1;
			nomes[2] = nome1;
		}

		System.out.println("===============================");
		System.out.println("          RANKING          ");
		int num = 1;

		for (int i = 0; i < nomes.length; i++) {
			System.out.println("-------------------------------");
			System.out.printf("%d° %10s : R$%7.2f %n", num, nomes[i], valor[i]);
			num++;
		}
		System.out.println("===============================");
	}

	public static void ganhador2(double dinheiro1, double dinheiro2, String[] nomes) {

		if (dinheiro1 == dinheiro2) {
			System.out.println("O ganhador foi os dois jogadores");
		} else if (dinheiro1 > dinheiro2) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[0]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro1);
			System.out.println("=====================================");
		} else if (dinheiro2 > dinheiro1) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[1]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro2);
			System.out.println("=====================================");
		}

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-24 13:17:19.363
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-24 13:17:19.382
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-24 13:17:20.940
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		// qtd jogadores
		int qtdJogadores = bemvindo();

		// nomes
		String[] nomes = pedirnomes(qtdJogadores);

		// regras
		regras();

		// Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		}

		// com 2 jogadores
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;
			int jg1 = 0, jg2 = 0;

			if (carro == 1) {

				// se o 1° jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}

						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									System.out.println();
									dinheiro1 += 5000;
									jg1 += 2;

								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}

						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro1 += 5000;
									System.out.println();
									jg1 += 2;
								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");

						}

					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			ganhador2(dinheiro1, dinheiro2, nomes);
			System.out.println();
			if(dinheiro1 > dinheiro2) {
				ranking(dinheiro1,nomes[0]);
			}
			else(dinheiro2 > dinheiro1){
				ranking(dinheiro2, nome);
			}
		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (i == 21 && poscarro1 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1);
			} else if (i == 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][21], nome[1], valor2);
			} else if (i == 21 && poscarro1 >= 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1, nome[1], valor2);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}
		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1:
			situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			break;
		case 2:
			situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			break;
		case 3:
			situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			break;
		case 4:
			situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			break;
		case 5:
			situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
			break;
		case 6:
			situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			break;
		case 7:
			situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			break;
		case 8:
			situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			break;
		case 9:
			situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			break;
		case 10:
			situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			break;
		}
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1:
			valor = -1000;
			break;
		case 2:
			valor = 2000;
			break;
		case 3:
			valor = -400;
			break;
		case 4:
			valor = 1000;
			break;
		case 5:
			valor = -300;
			break;
		case 6:
			valor = 2500;
			break;
		case 7:
			valor = -500;
			break;
		case 8:
			valor = 1000;
			break;
		case 9:
			valor = -600;
			break;
		case 10:
			valor = 500;
			break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		}

		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(double valor1, String nome1) {

		String[] nomes = new String[3];
		double[] valor = new double[3];
		nomes[0] = "pedro";
		nomes[1] = "bruno";
		nomes[2] = "kauan";
		valor[0] = 10000;
		valor[1] = 4000;
		valor[2] = 2000;

		if (valor1 > valor[0]) {
			valor[0] = valor1;
			nomes[0] = nome1;
		} else if (valor1 > valor[1]) {
			valor[1] = valor1;
			nomes[1] = nome1;
		} else if (valor1 > valor[2]) {
			valor[2] = valor1;
			nomes[2] = nome1;
		}

		System.out.println("===============================");
		System.out.println("          RANKING          ");
		int num = 1;

		for (int i = 0; i < nomes.length; i++) {
			System.out.println("-------------------------------");
			System.out.printf("%d° %10s : R$%7.2f %n", num, nomes[i], valor[i]);
			num++;
		}
		System.out.println("===============================");
	}

	public static void ganhador2(double dinheiro1, double dinheiro2, String[] nomes) {

		if (dinheiro1 == dinheiro2) {
			System.out.println("O ganhador foi os dois jogadores");
		} else if (dinheiro1 > dinheiro2) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[0]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro1);
			System.out.println("=====================================");
		} else if (dinheiro2 > dinheiro1) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[1]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro2);
			System.out.println("=====================================");
		}

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-24 13:17:20.962
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-24 13:17:20.968
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-24 13:17:22.709
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Corrida;

import java.util.Random;
import java.util.Scanner;

public class Jogo {
	static Random aleatorio = new Random();

	public static void main(String[] args) {
		Scanner ler = new Scanner(System.in);
		int dado1 = 0, dado2 = 0, posicao1 = 0, posicao2 = 0;

		// qtd jogadores
		int qtdJogadores = bemvindo();

		// nomes
		String[] nomes = pedirnomes(qtdJogadores);

		// regras
		regras();

		// Quem começa o jogo?
		do {
			String espaco = "";
			dado1 = dado();
			dado2 = dado();
			do {
				System.out.print("Jogue o dado " + nomes[0] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado1);
			System.out.println("-----------------------------------------------------");
			do {
				System.out.print("Jogue o dado " + nomes[1] + ":");
				espaco = ler.nextLine();
			} while (!espaco.equals(" "));
			System.out.println("Dado:" + dado2);
			System.out.println("=====================================================");
			if (dado1 == dado2) {
				System.err.println("===================");
				System.err.println("||dados iguais   ||\n||jogue novamente||");
				System.err.println("===================");
				System.out.println("=====================================================");
			}
		} while (dado1 == dado2);

		// com um jogador (nao feito ainda)
		if (qtdJogadores == 1) {

		}

		// com 2 jogadores
		else if (qtdJogadores == 2) {

			int carro = 0;

			if (dado1 > dado2) {
				System.out.printf("O jogador %s começa a corrida %n", nomes[0]);
				System.out.println("=====================================================");
				carro = 1;
			} else {
				System.out.printf("O jogador %s começa a corrida %n", nomes[1]);
				System.out.println("=====================================================");
				carro = 2;
			}

			System.out.println();
			System.err.println("============FOI DADA A LARGADA A CORRIDA=============");
			System.out.println();

			double dinheiro1 = 5000;
			double dinheiro2 = 5000;

			dado1 = 0;
			dado2 = 0;
			int valor1 = 0, valor2 = 0;
			int jg1 = 0, jg2 = 0;

			if (carro == 1) {

				// se o 1° jogador começa
				do {
					int num = 0;
					String espaco = "";

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {

					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}

					default -> {

						if (posicao1 == -1) {
							posicao1 = valor1;
						}

						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									System.out.println();
									dinheiro1 += 5000;
									jg1 += 2;

								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}

						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;
					}

					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}
					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			// se o segundo jogador começa
			else {
				do {
					int num = aleatorio.nextInt(11);
					String espaco = "";

					// jogador 2
					do {
						System.out.print("Jogue o dado " + nomes[1] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao2) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor2 = posicao2;
						posicao2 = -1;

					}
					default -> {

						if (posicao2 == -1) {
							posicao2 = valor2;
						}
						if (jg2 != 2) {
							dado2 = dado();
							posicao2 += dado2;
							if (posicao2 <= 20) {
								System.out.println("DADO:" + dado2);
								System.out.println(frases(posicao2, num));
								dinheiro2 += resultados(posicao2, num);
								System.out.println();
							} else {
								if (jg1 != 2) {
									System.out.println("DADO:" + dado2);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro2 += 5000;
									System.out.println();
									jg2 += 2;
								} else {
									System.out.println("DADO:" + dado2);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");
						}

					}
					}

					System.out.println();

					// jogador 1
					do {
						System.out.print("Jogue o dado " + nomes[0] + ":");
						espaco = ler.nextLine();
						num = aleatorio.nextInt(1, 11);

					} while (!espaco.equals(" "));

					switch (posicao1) {
					case 7, 11, 15 -> {
						System.out.println("Esta no mecanico");
						System.out.println();
						valor1 = posicao1;
						posicao1 = -1;
					}
					default -> {
						if (posicao1 == -1) {
							posicao1 = valor1;
						}
						if (jg1 != 2) {
							dado1 = dado();
							posicao1 += dado1;
							if (posicao1 <= 20) {
								System.out.println("DADO:" + dado1);
								System.out.println(frases(posicao1, num));
								dinheiro1 += resultados(posicao1, num);
								System.out.println();
							} else {
								if (jg2 != 2) {
									System.out.println("DADO:" + dado1);
									System.out.println(
											"LINHA DE CHEGADA:\nparabéns você ganhou o prêmio de R$ 5000 reais.");
									dinheiro1 += 5000;
									System.out.println();
									jg1 += 2;
								} else {
									System.out.println("DADO:" + dado1);
									System.out.println("LINHA DE CHEGADA:\nvoçe terminou a corrida");
								}
							}
						} else {
							System.out.println("Voçe terminou a corrida");
							System.out.println("Aguarde seu adversario terminar");

						}

					}
					}

					tabuleiro2(nomes, posicao1, posicao2, dinheiro1, dinheiro2);
					System.out.println();

				} while (posicao1 < 21 || posicao2 < 21);

			}

			ganhador2(dinheiro1, dinheiro2, nomes);
			System.out.println();
			if(dinheiro1 > dinheiro2) {
				ranking(dinheiro1,nomes[0]);
			}
			else(dinheiro2 > dinheiro1){
				ranking(dinheiro2, nomes);
			}
		}

	}

	public static void tabuleiro2(String[] nome, int poscarro1, int poscarro2, double valor1, double valor2) {

		String[][] tabuleiro = new String[1][22];

		tabuleiro[0][0] = "| LARGADA          |";
		tabuleiro[0][1] = "| Parada livre     |";
		tabuleiro[0][2] = "| Sorte ou Revés   |";
		tabuleiro[0][3] = "| Imposto          |";
		tabuleiro[0][4] = "| Sorte ou Revés   |";
		tabuleiro[0][5] = "| Pit Stop         |";
		tabuleiro[0][6] = "| Sorte ou Revés   |";
		tabuleiro[0][7] = "| Mecânica         |";
		tabuleiro[0][8] = "| Imposto          |";
		tabuleiro[0][9] = "| Sorte ou Revés   |";
		tabuleiro[0][10] = "| Parada livre     |";
		tabuleiro[0][11] = "| Mecânica         |";
		tabuleiro[0][12] = "| Pit Stop         |";
		tabuleiro[0][13] = "| Imposto          |";
		tabuleiro[0][14] = "| Sorte ou Revés   |";
		tabuleiro[0][15] = "| Mecânica         |";
		tabuleiro[0][16] = "| Sorte ou Revés   |";
		tabuleiro[0][17] = "| Imposto          |";
		tabuleiro[0][18] = "| Sorte ou Revés   |";
		tabuleiro[0][19] = "| Pit Stop         |";
		tabuleiro[0][20] = "| Sorte ou Revés   |";
		tabuleiro[0][21] = "| LINHA DE CHEGADA |";

		for (int i = 0; i < 22; i++) {
			if (i == poscarro1 && i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1, nome[1], valor2);
			} else if (i == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][i], nome[1], valor2);
			} else if (i == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][i], nome[0], valor1);
			} else if (-1 == poscarro1) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (-1 == poscarro1 && -1 == poscarro2) {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			} else if (i == 21 && poscarro1 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1);
			} else if (i == 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s #%s($%5.2f)%n", tabuleiro[0][21], nome[1], valor2);
			} else if (i == 21 && poscarro1 >= 21 && poscarro2 >= 21) {
				System.out.println("|------------------|");
				System.out.printf("%s @%s($%5.2f)|#%s($%5.2f)%n", tabuleiro[0][21], nome[0], valor1, nome[1], valor2);
			} else {
				System.out.println("|------------------|");
				System.out.printf("%s %n", tabuleiro[0][i]);
			}
		}

	}

	public static String frases(int dado, int num) {
		String situacao = "";

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			situacao = "Sorte ou Réves:\n" + frasesorteOUreves(num);
		}
		case 1, 10 -> {
			situacao = "Parada livre:\nFolga para respirar!Você não tem que fazer nada neste espaço.";
		}
		case 3, 8, 13, 17 -> {
			situacao = "Imposto:\nEssa não, o leão está com fome! Pague ao dono da pista o imposto no valor de R$ 300 reais.";
		}
		case 5, 12, 19 -> {
			situacao = "Pit Stop:\nSeu carro acaba de ser reabastecido com um valor de 500 reais .";
		}
		case 7, 11, 15 -> {
			situacao = "Mecânica:\nVocê entrou numa fria, pois enquanto estiver no mecânico não pode andar . Você ficará uma rodada sem jogar. ";
		}

		}

		return situacao;

	}

	public static int bemvindo() {
		Scanner ler = new Scanner(System.in);
		int qtd = 0;
		do {
			System.out.println("=====================================================");
			System.out.println("                  BEM-VINDO     ");
			System.out.println("             Corrida Do Milhão ");
			System.out.println("=====================================================");
			System.out.print("Informe a quantidade de jogadores: ");
			qtd = ler.nextInt();
			System.out.println("=====================================================");
		} while (qtd < 1 || qtd > 3);

		return qtd;

	}

	public static String[] pedirnomes(int qtd) {
		Scanner ler = new Scanner(System.in);

		String[] nomes = new String[qtd];

		for (int i = 0, cont = 1; i < nomes.length; cont++, i++) {

			switch (qtd) {
			case 1:
				System.out.printf("Informe o nome do jogador: ");
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;

			default:
				System.out.printf("Informe o nome do jogador %d: ", cont);
				nomes[i] = ler.nextLine();
				System.out.println("=====================================================");
				break;
			}

		}
		return nomes;

	}

	public static int dado() {
		Random aleatorio = new Random();
		int dado = aleatorio.nextInt(1, 4);
		return dado;
	}

	public static String frasesorteOUreves(int num) {

		String situacao = "";

		switch (num) {
		case 1:
			situacao = "Revés: voçe acaba de ser multado em R$ 1000 reais , placa do seu veiculo esta inelegível.";
			break;
		case 2:
			situacao = "Sorte: parabéns você acaba de ganhar R$ 2000 para trocar seus pneus.";
			break;
		case 3:
			situacao = "Revés: HM, que pena voçe acaba de ser multado no valor de R$ 400 por alta velocidade. ";
			break;
		case 4:
			situacao = "Sorte: Parabéns,você acabou de ganha R$ 1000 reais para pintar o seu carro.";
			break;
		case 5:
			situacao = "Revés: Deu Ruim!! voçe acaba de ser multado em R$ 300 andar sem sinto de segurança.";
			break;
		case 6:
			situacao = "Sorte: Parabéns,voçe acaba de ganhar R$ 2500 para turbinar o seu carro.";
			break;
		case 7:
			situacao = "Revés: HM...Pneu do seu carro esta careca ,voçe acaba de ser multado em R$500. ";
			break;
		case 8:
			situacao = "Sorte: Parabéns, Voçe acaba de ganhar R$1000 para trocar o escapamento.";
			break;
		case 9:
			situacao = "Revés:Hm...Se distraiu no celular tomou multa de R$600.";
			break;
		case 10:
			situacao = "Sorte:Parabéns voçe ganhou R$500 para trocar óleo.";
			break;
		}
		return situacao;
	}

	public static double sorteoureves(int num) {
		double valor = 0;

		switch (num) {
		case 1:
			valor = -1000;
			break;
		case 2:
			valor = 2000;
			break;
		case 3:
			valor = -400;
			break;
		case 4:
			valor = 1000;
			break;
		case 5:
			valor = -300;
			break;
		case 6:
			valor = 2500;
			break;
		case 7:
			valor = -500;
			break;
		case 8:
			valor = 1000;
			break;
		case 9:
			valor = -600;
			break;
		case 10:
			valor = 500;
			break;
		}
		return valor;
	}

	public static double resultados(int dado, int num) {
		double valor = 0;

		switch (dado) {
		case 2, 4, 6, 9, 14, 16, 18, 20 -> {
			valor = sorteoureves(num);
		}
		case 1, 10 -> {
			valor = 0;
			// parada livre
		}
		case 3, 8, 13, 17 -> {
			valor = -300;
		}
		case 5, 12, 19 -> {
			valor = 500;
		}
		case 7, 11, 15 -> {
			valor = 0;
		}
		}

		return valor;

	}

	public static void regras() {
		System.out.println("                 Vamos começar o jogo                ");
		System.out.println("=====================================================");
		System.out.println();
		System.err.println("||=================================================||");
		System.err.println("||               INSTRUÇÃO DO JOGO                 ||");
		System.err.println("||1°Cada jogador começa a corrida com R$5000,00    ||");
		System.err.println("||2°Aperte a tecla espaço e enter para jogar o dado||");
		System.err.println("||3°Num só espaço pode para mais de um carro       ||");
		System.err.println("||=================================================||");
		System.out.println();
		System.out.println("=====================================================");
		System.out.println("     O maior numero no dado começa a corrida:        ");
		System.out.println("=====================================================");

	}

	public static void ranking(double valor1, String nome1) {

		String[] nomes = new String[3];
		double[] valor = new double[3];
		nomes[0] = "pedro";
		nomes[1] = "bruno";
		nomes[2] = "kauan";
		valor[0] = 10000;
		valor[1] = 4000;
		valor[2] = 2000;

		if (valor1 > valor[0]) {
			valor[0] = valor1;
			nomes[0] = nome1;
		} else if (valor1 > valor[1]) {
			valor[1] = valor1;
			nomes[1] = nome1;
		} else if (valor1 > valor[2]) {
			valor[2] = valor1;
			nomes[2] = nome1;
		}

		System.out.println("===============================");
		System.out.println("          RANKING          ");
		int num = 1;

		for (int i = 0; i < nomes.length; i++) {
			System.out.println("-------------------------------");
			System.out.printf("%d° %10s : R$%7.2f %n", num, nomes[i], valor[i]);
			num++;
		}
		System.out.println("===============================");
	}

	public static void ganhador2(double dinheiro1, double dinheiro2, String[] nomes) {

		if (dinheiro1 == dinheiro2) {
			System.out.println("O ganhador foi os dois jogadores");
		} else if (dinheiro1 > dinheiro2) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[0]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro1);
			System.out.println("=====================================");
		} else if (dinheiro2 > dinheiro1) {
			System.out.println("=====================================");
			System.out.printf("Parabens %s voçe foi o ganhador %n", nomes[1]);
			System.out.printf("Com um valor de R$ %7.2f %n", dinheiro2);
			System.out.println("=====================================");
		}

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
